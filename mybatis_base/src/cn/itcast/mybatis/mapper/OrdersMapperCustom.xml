<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<!--注意：未来使用mapper代理方法开发时，namespace有特殊的重要作用 namespace等于map接口地址-->
<mapper	namespace="cn.itcast.mybatis.mapper.OrdersMapperCustom">

		<!-- 定义订单查询关联用户的resultmap -->
		<!-- type表示 要将整个查询的结果映射到User中-->
		<resultMap type="cn.itcast.mybatis.po.Orders" id="OrderUserResultMap">
			<!-- 配置要映射的订单信息 
			id:指定查询列中的唯一标识 （主键） 如果有多个列组成唯一表示 则配2个id
			result:普通属性的配置
			property:对数据库中表中的列所映射到的对应type类型中的属性（user）
			column：对数据库中表中的列-->
			<id column="id" property="id"/>
			<result column="user_id" property="userId"/>
			<result column="number" property="number"/>
			<result column="createtime" property="createtime"/>
			<result column="note" property="note"/>
			<!-- 配置要映射的关联的用户信息 -->
			<!-- association:用于映射关联查询单个对象的信息
			property:要将关联查询的用户信息映射到Orders中的哪个属性
			javaType:属性对应的类路径 -->
			<association property="user" javaType="cn.itcast.mybatis.po.User">
				<!-- id:关联查询用户的唯一标识
				column：指定唯一表示用户信息的列
				property：映射到user的哪个属性 
				result：普通属性-->
				<id column="user_id" property="id"/>
				<result column="username" property="username"/>
				<result column="sex" property="sex"/>
				<result column="address" property="address"/>
			</association>
		</resultMap>

		<!-- 查询订单，关联查询用户  这里主要专注查询 所以不额外输入 使用resultType方法-->		
		<select id="findOrderUser"  resultType="cn.itcast.mybatis.po.OrdersCustom">
			SELECT orders.*,
				user.username,
				user.sex,
				user.address
			from orders,user 
			WHERE orders.user_id = user.id
		</select>
		<!-- 查询订单，关联查询用户  使用resultMap方法-->	
		<select id="findOrderUserResultMap"  resultMap="OrderUserResultMap">
			SELECT orders.*,
				user.username,
				user.sex,
				user.address
			from orders,user 
			WHERE orders.user_id = user.id
		</select>
</mapper>